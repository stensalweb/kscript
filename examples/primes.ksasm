# primes.ksasm - bytecode for calculating primes, in kscript assembly

# n = 30
const 30
store "n"

# sieve = [true] * n
const true 
load "list"
call 1
load "n"
load "mul"
call 2
store "sieve"

# i = 2
const 2
store "i"

# sieve loop
loop:
    # if sieve[i]:
    load "i"
    load "sieve"
    attr "__get__"
    call 1
    beqf ~if.after

    if:
        # inner loop
        load "i"
        load "i"
        load "mul"
        call 2
        store "j"
        
        loop_inner:
            # sieve[j] = false
            load "j"
            const false
            load "sieve"
            attr "__set__"
            call 2

            # j += i
            load "j"
            load "i"
            load "add"
            call 2
            store "j"

            # j < n -> loop, else continue
            load "j"
            load "n"
            load "__lt__"
            call 2
            beqt ~loop_inner

    if.after:

    # i * i < n -> loop, else continue on
    load "i"
    load "i"
    load "mul"
    call 2
    load "n"
    load "__lt__"
    call 2
    beqt ~loop

# i = 2
const 2
store "i"

# print loop
loop_print:

    # if sieve[i]:
    load "i"
    load "sieve"
    attr "__get__"
    call 1
    beqf ~if2.after

    if2:
        load "i"
        load "print"
        call 1

    if2.after:

    # i++
    load "i"
    const 1
    load "add"
    call 2
    store "i"

    # i < n
    load "i"
    load "n"
    load "__lt__"
    call 2
    beqt ~loop_print

# done!
load "exit"
call 0
