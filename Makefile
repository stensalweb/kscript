# -*- Makefile (generated by ./configure). Please rerun ./configure, and do NOT modify this file! -*-

# -*- VARS -*-

CC               := cc
CFLAGS           := -O3 -std=c99
LDFLAGS          := 

PREFIX           ?= /usr/local

_tmp             := .tmp


# -*- FILES -*-

# general purpose headers
all_H            := $(wildcard include/*.h)

# kscript library
libks_C          := src/library/mem.c src/library/obj.c src/library/funcs.c src/library/codegen.c src/library/fmt.c src/library/util.c src/library/log.c src/library/init.c src/library/exec.c src/library/types/pfunc.c src/library/types/kfunc.c src/library/types/str.c src/library/types/Error.c src/library/types/float.c src/library/types/list.c src/library/types/code.c src/library/types/parser.c src/library/types/dict.c src/library/types/module.c src/library/types/int.c src/library/types/tuple.c src/library/types/complex.c src/library/types/none.c src/library/types/ast.c src/library/types/cfunc.c src/library/types/thread.c src/library/types/type.c src/library/types/bool.c

# kscript binary/commandline executable
ks_C             := src/cmdline/ks.c src/cmdline/getopt_long.c


# -*- TARGETS -*-

# target files
libks_SHARED     := lib/libks.so
libks_STATIC     := lib/libks.a
ks_BIN           := bin/ks

# generated
libks_O          := $(patsubst %.c,$(_tmp)/%.o,$(libks_C))
ks_O             := $(patsubst %.c,$(_tmp)/%.o,$(ks_C))


# -*- RULES -*-

.PHONY: default clean install uninstall


# default target to build
default: $(ks_BIN)

clean:
	rm -rf $(wildcard $(_tmp) include/ks-config.h)

# rule to compile a single object file
$(_tmp)/src/%.o: src/%.c $(all_H)
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -I/home/cade/projects/kscript/include $< -fPIC -c -o $@

# rule to build the shared object file (.so) from all the individual compilations
# Since `libks_o` contains many files, we use `$^` to mean `all input files together`
$(libks_SHARED): $(libks_O)
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -shared $^ -o $@
	@echo "\n|| Built: $@\n"

# rule to build the static object file (.a)
$(libks_STATIC): $(libks_O)
	@mkdir -p $(dir $@)
	$(AR) cr $@ $^
	@echo "\n|| Built: $@\n"

# rule to build the executable (no extension) from the library and it's `.o`'s
#   since we require a library, and object files, we don't use `$^`, but just build
#   explicitly
$(ks_BIN): $(libks_SHARED) $(libks_STATIC) $(ks_O)
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -Wl,-rpath=./lib/ -L./lib/ $(ks_O) -lks -lm -ldl -lpthread -lks -o $@
	@echo "\n|| Built: $@\n"


